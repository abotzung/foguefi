these types have existed since c99
diff --git a/src/xfs/libxfs/linux.c b/src/xfs/libxfs/linux.c
index 69f04ad..3dc88c6 100644
--- a/src/xfs/libxfs/linux.c
+++ b/src/xfs/libxfs/linux.c
@@ -17,6 +17,7 @@
  */
 
 #include <mntent.h>
+#include <stdint.h>
 #include <sys/stat.h>
 #include <sys/mount.h>
 #include <sys/ioctl.h>
@@ -163,7 +164,7 @@ void
 platform_findsizes(char *path, int fd, long long *sz, int *bsz)
 {
 	struct stat	st;
-	__uint64_t	size;
+	uint64_t	size;
 	int		error;
 
 	if (fstat(fd, &st) < 0) {
diff --git a/src/xfs/libxfs/radix-tree.c b/src/xfs/libxfs/radix-tree.c
index eef9c36..9f4d75e 100644
--- a/src/xfs/libxfs/radix-tree.c
+++ b/src/xfs/libxfs/radix-tree.c
@@ -21,6 +21,7 @@
 #include "platform_defs.h"
 #include "xfs.h"
 #include "radix-tree.h"
+#include <stdint.h>
 
 #ifndef ARRAY_SIZE
 #define ARRAY_SIZE(x) (sizeof(x) / sizeof((x)[0]))
@@ -66,21 +67,21 @@ static unsigned long height_to_maxindex[RADIX_TREE_MAX_PATH];
 static inline void tag_set(struct radix_tree_node *node, unsigned int tag,
 		int offset)
 {
-	*((__uint32_t *)node->tags[tag] + (offset >> 5)) |= (1 << (offset & 31));
+	*((uint32_t *)node->tags[tag] + (offset >> 5)) |= (1 << (offset & 31));
 }
 
 static inline void tag_clear(struct radix_tree_node *node, unsigned int tag,
 		int offset)
 {
-	__uint32_t 	*p = (__uint32_t*)node->tags[tag] + (offset >> 5);
-	__uint32_t 	m = 1 << (offset & 31);
+	uint32_t 	*p = (uint32_t*)node->tags[tag] + (offset >> 5);
+	uint32_t 	m = 1 << (offset & 31);
 	*p &= ~m;
 }
 
 static inline int tag_get(struct radix_tree_node *node, unsigned int tag,
 		int offset)
 {
-	return 1 & (((const __uint32_t *)node->tags[tag])[offset >> 5] >> (offset & 31));
+	return 1 & (((const uint32_t *)node->tags[tag])[offset >> 5] >> (offset & 31));
 }
 
 /*
